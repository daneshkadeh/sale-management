<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"> 

	<!-- Hibernate session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>

		<property name="entityInterceptor">
			<bean class="com.s3s.ssm.interceptor.OptimisticLockingInterceptor"/>
		</property>

		<property name="packagesToScan">
			<list>
				<value>com.s3s.ssm.entity</value>
				<value>com.s3s.ssm.entity.operator</value>
				<value>com.s3s.ssm.entity.config</value>
				<value>com.s3s.ssm.entity.catalog</value>
				<value>com.s3s.ssm.entity.contact</value>
				<value>com.s3s.ssm.entity.sales</value>
				<value>com.s3s.ssm.entity.bi</value>
				<value>com.s3s.ssm.entity.store</value>
				<value>com.s3s.ssm.entity.finance</value>
				<value>com.s3s.ssm.entity.shipment</value>
				<value>com.s3s.ssm.entity.supplychain</value>
				<value>com.s3s.ssm.entity.security</value>
			</list>
		</property>
		<!-- property name="annotatedClasses">
			<list>
				<value>com.s3s.ssm.entity.Customer</value>
				<value>com.s3s.ssm.entity.Goods</value>
				<value>com.s3s.ssm.entity.Invoice</value>
				<value>com.s3s.ssm.entity.DetailInvoice</value>
			</list>
		</property
			-->
	</bean>

	<!-- AOP to open the session in service -->
	<bean id="transactionalPointcut" class="org.springframework.aop.support.annotation.AnnotationMatchingPointcut">
		<constructor-arg type="java.lang.Class" value="org.springframework.transaction.annotation.Transactional"/>
	</bean>
	<bean id="openSessionInServiceInterceptor" class="com.s3s.ssm.interceptor.OpenSessionInServiceInterceptor">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="openSessionInServiceAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="openSessionInServiceInterceptor" />
		<property name="pointcut" ref="transactionalPointcut" />
		<!-- session must be opened at the beginning and closed at the end -->
		<!-- property name="order" value="-2147483648" /-->
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

	<!-- AOP for transaction -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<tx:annotation-driven />

	<aop:aspectj-autoproxy/>
</beans>    